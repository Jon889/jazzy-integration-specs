Endpoint.swift
	public let URL: String
	public let method: Moya.Method
	public let sampleResponse: EndpointSampleResponse
	public let parameters: [String: AnyObject]
	public let parameterEncoding: Moya.ParameterEncoding
	public let httpHeaderFields: [String: AnyObject]
	public init(URL: String, sampleResponse: EndpointSampleResponse, method: Moya.Method = Moya.Method.GET, parameters: [String: AnyObject] = [String: AnyObject](), parameterEncoding: Moya.ParameterEncoding = .URL, httpHeaderFields: [String: AnyObject] = [String: AnyObject]())
	public var urlRequest: NSURLRequest
	public let URL: String
	public let method: Moya.Method
	public let sampleResponse: EndpointSampleResponse
	public let parameters: [String: AnyObject]
	public let parameterEncoding: Moya.ParameterEncoding
	public let httpHeaderFields: [String: AnyObject]
	public init(URL: String, sampleResponse: EndpointSampleResponse, method: Moya.Method = Moya.Method.GET, parameters: [String: AnyObject] = [String: AnyObject](), parameterEncoding: Moya.ParameterEncoding = .URL, httpHeaderFields: [String: AnyObject] = [String: AnyObject]())
	public var urlRequest: NSURLRequest
	public let URL: String
	public let method: Moya.Method
	public let sampleResponse: EndpointSampleResponse
	public let parameters: [String: AnyObject]
	public let parameterEncoding: Moya.ParameterEncoding
	public let httpHeaderFields: [String: AnyObject]
	public init(URL: String, sampleResponse: EndpointSampleResponse, method: Moya.Method = Moya.Method.GET, parameters: [String: AnyObject] = [String: AnyObject](), parameterEncoding: Moya.ParameterEncoding = .URL, httpHeaderFields: [String: AnyObject] = [String: AnyObject]())
	public var urlRequest: NSURLRequest
Moya.swift
	func method() -> Alamofire.Method
	func parameterEncoding() -> Alamofire.ParameterEncoding
	var path: String
	var baseURL: NSURL
	var sampleData: NSData
	public let endpointsClosure: MoyaEndpointsClosure
	public let endpointResolver: MoyaEndpointResolution
	public let stubResponses: Bool
	public init(endpointsClosure: MoyaEndpointsClosure, endpointResolver: MoyaEndpointResolution = MoyaProvider.DefaultEnpointResolution(), stubResponses: Bool  = false)
	public func request(token: T, parameters: [String: AnyObject], completion: MoyaCompletion)
	public func request(token: T, method: Moya.Method, completion: MoyaCompletion)
	public func request(token: T, completion: MoyaCompletion)
	public class func DefaultEnpointResolution() -> MoyaEndpointResolution
	func method() -> Alamofire.Method
	func parameterEncoding() -> Alamofire.ParameterEncoding
	var path: String
	var baseURL: NSURL
	var sampleData: NSData
	public let endpointsClosure: MoyaEndpointsClosure
	public let endpointResolver: MoyaEndpointResolution
	public let stubResponses: Bool
	public init(endpointsClosure: MoyaEndpointsClosure, endpointResolver: MoyaEndpointResolution = MoyaProvider.DefaultEnpointResolution(), stubResponses: Bool  = false)
	public func request(token: T, parameters: [String: AnyObject], completion: MoyaCompletion)
	public func request(token: T, method: Moya.Method, completion: MoyaCompletion)
	public func request(token: T, completion: MoyaCompletion)
	public class func DefaultEnpointResolution() -> MoyaEndpointResolution
	func method() -> Alamofire.Method
	func parameterEncoding() -> Alamofire.ParameterEncoding
	var path: String
	var baseURL: NSURL
	var sampleData: NSData
	public let endpointsClosure: MoyaEndpointsClosure
	public let endpointResolver: MoyaEndpointResolution
	public let stubResponses: Bool
	public init(endpointsClosure: MoyaEndpointsClosure, endpointResolver: MoyaEndpointResolution = MoyaProvider.DefaultEnpointResolution(), stubResponses: Bool  = false)
	public func request(token: T, parameters: [String: AnyObject], completion: MoyaCompletion)
	public func request(token: T, method: Moya.Method, completion: MoyaCompletion)
	public func request(token: T, completion: MoyaCompletion)
	public class func DefaultEnpointResolution() -> MoyaEndpointResolution
Moya+ReactiveCocoa.swift
	public class MoyaResponse
	public let statusCode: Int
	public let data: NSData
	public let response: NSURLResponse?
	public init(statusCode: Int, data: NSData, response: NSURLResponse?)
	public class MoyaResponse
	public var description: String
	public var debugDescription: String
	override public init(endpointsClosure: MoyaEndpointsClosure, endpointResolver: MoyaEndpointResolution = MoyaProvider.DefaultEnpointResolution(), stubResponses: Bool = false)
	public func request(token: T, parameters: [String: AnyObject]) -> RACSignal
	public func request(token: T, method: Moya.Method) -> RACSignal
	public func request(token: T) -> RACSignal
	public var hashValue: Int
RACSignal+Moya.swift
	public enum MoyaErrorCode: Int
	public func filterStatusCode(code: Int) -> RACSignal
	public func filterSuccessfulStatusCodes() -> RACSignal

	RACSignal
